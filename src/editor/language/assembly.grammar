@skip {
  space | comment
}

@top Program {
  StatementOrDefinition (StatementOrDefinition)*
}

@tokens {
  space { " " | "\t" | "\n" }
  comment { ";" ![\n]* }
  registerNumber { $[0-1]? $[0-9] }
  label_char { $[\w] }
  identifier { $[0-9a-zA-Z]+ }
  number { "#" $[0-9a-fA-F]+ }
  address { "$" $[0-9a-fA-F]+ }
  definitionValue { $[0-9a-fA-F]+ }
}

StatementOrDefinition {
  Statement | Definition
}

Statement {
  Command Arg?
}

DefinitionValue {
  definitionValue
}

Definition {
  ":define" Identifier DefinitionValue
}

Identifier {
  identifier
}

Command {
  "LDR" | "STR" | "STRPC" | "JMP" | "PRESENT" | "AND" | "OR" | "ADD" | "SUB" | "SUBV" |
  "CLFZ" | "CER" | "CEOT" | "SEOT" | "NOOP" | "SZ" | "LER" | "SSVOP" | "SSOP" |
  "LSIP" | "DATACALL" | "DATACALL2" | "MAX"
}


Value {
  Register | Number | Address
}

NumberIdentifier {
  "!" Identifier
}

AddressIdentifier {
  "@" Identifier
}

AnyIdentifier {
  NumberIdentifier | AddressIdentifier
}

Arg {
  Value | AnyIdentifier
}

Register {
  "R" registerNumber
}

Number {
  number
}

Address {
  address
}

Label {
  "--" identifier
}
