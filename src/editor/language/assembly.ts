// This file was generated by lezer-generator. You probably shouldn't edit it.
import {LRParser} from "@lezer/lr"
export const parser = LRParser.deserialize({
  version: 14,
  states: "$hOYQPOOOOQO'#C`'#C`O!vQPO'#C_O#XQQO'#CjOOQO'#C^'#C^QYQPOOO#^QPO'#CcOOQO'#Cd'#CdOOQO'#Ce'#CeOOQO'#Cb'#CbO#XQQO'#CgO#XQQO'#CiOOQO'#Cf'#CfOOQO'#Ca'#CaOOQO'#Cl'#ClO#cQPO,58yOOQO'#Ch'#ChO%UQSO,59UOOQO'#Cm'#CmQYQPOOOOQO,58},58}OOQO,59R,59ROOQO,59T,59TOOQO-E6j-E6jOOQO'#Ck'#CkOOQO1G.p1G.pOOQO-E6k-E6k",
  stateData: "%Z~OdOSeOS~OfPOgPOhPOiPOjPOkPOlPOmPOnPOoPOpPOqPOrPOsPOtPOuPOvPOwPOxPOyPOzPO{PO|PO!URO~O}UO!PVO!QWO!RYO!TZO~O!S`O~O!OdO~ObRafRagRahRaiRajRakRalRamRanRaoRapRaqRarRasRatRauRavRawRaxRayRazRa{Ra|Ra!URa~P!vO!VhO~O",
  goto: "!nbPPcjotx|||x!Q!U!Qj!_!b!hQTOTbTcVSOTcVQOTcT^Q_T]Q_TXQ_T[Q_QaRQeYRfZRiaQ_QRg_QcTRjc",
  nodeNames: "âš  Program StatementOrDefinition Statement Command Arg Value Register Number Address AnyIdentifier NumberIdentifier Identifier AddressIdentifier Definition DefinitionValue",
  maxTerm: 53,
  skippedNodes: [0],
  repeatNodeCount: 2,
  tokenData: "Eg~RnXY#PYZ#Ppq#Pqr#Ust#Ztu#u!Q!S$a!S![$y![!]&X!]!^'S!b!c'k!c!d'p!d!e%c!e!f*`!f!g.T!g!i%c!i!l%y!l!m2U!m!n%y!n!o3`!o!p6s!p!q7z!q!r9j!r!s:`!s!t%y!t!u=^!u!v=n!v!}%y#T#Z%c#Z#o%y~#UOd~~#ZO!R~~#^R!Q![#g!c!i#g#T#Z#g~#lR!P~!Q![#g!c!i#g#T#Z#g~#xR!Q![$R!c!i$R#T#Z$R~$WR!Q~!Q![$R!c!i$R#T#Z$RV$jT!VS!SQ!OP!Q![$y!c!i%c!i!}%y#T#Z%c#Z#o%yV%ST!VS!SQ!OP!Q![%c!c!i%c!i!}%y#T#Z%c#Z#o%yU%jT!VS!SQ!Q![%c!c!i%c!i!}%y#T#Z%c#Z#o%yQ&OR!SQ!Q![%y!c!}%y#T#o%y~&[P#W#X&_~&bP#X#Y&e~&hP#Y#Z&k~&nP#]#^&q~&tP#b#c&w~&zP#X#Y&}~'SO!U~~'XSe~OY'SZ;'S'S;'S;=`'e<%lO'S~'hP;=`<%l'S~'pO!T~V'wX!VS!SQ!Q![%c!c!f%c!f!g(d!g!i%c!i!p%y!p!q)j!q!}%y#T#Z%c#Z#o%yV(kV!VS!SQ!Q![%c!c!f%c!f!g)Q!g!i%c!i!}%y#T#Z%c#Z#o%yV)ZTmP!VS!SQ!Q![%c!c!i%c!i!}%y#T#Z%c#Z#o%yR)oT!SQ!Q![%y!c!f%y!f!g*O!g!}%y#T#o%yR*VRkP!SQ!Q![%y!c!}%y#T#o%yV*gX!VS!SQ!Q![%c!c!g%c!g!h+S!h!i%c!i!n%y!n!o,|!o!}%y#T#Z%c#Z#o%yV+ZX!VS!SQ!Q![%c!c!i%c!i!q%y!q!r+v!r!t%y!t!u,l!u!}%y#T#Z%c#Z#o%yR+{T!SQ!Q![%y!c!v%y!v!w,[!w!}%y#T#o%yR,cRrP!SQ!Q![%y!c!}%y#T#o%yR,sRqP!SQ!Q![%y!c!}%y#T#o%yR-RT!SQ!Q![%y!c!h%y!h!i-b!i!}%y#T#o%yR-gS!SQ!Q![%y!c!|%y!|!}-s#T#o%yR-zRpP!SQ!Q![%y!c!}%y#T#o%yV.[U!VS!SQ!Q![%c!c!d.n!d!i%c!i!}%y#T#Z%c#Z#o%yV.uV!VS!SQ!Q![%c!c!i%c!i!v%y!v!w/[!w!}%y#T#Z%c#Z#o%yR/aS!SQ!Q![%y!c!d/m!d!}%y#T#o%yR/rT!SQ!Q![%y!c!e%y!e!f0R!f!}%y#T#o%yR0WS!SQ!Q![%y!c!d0d!d!}%y#T#o%yR0iT!SQ!Q![%y!c!n%y!n!o0x!o!}%y#T#o%yR0}T!SQ!Q![%y!c!n%y!n!o1^!o!}%y#T#o%yR1eTzP!SQ!Q!S%y!S!T1t!T![%y!c!}%y#T#o%yR1{R{P!SQ!Q![%y!c!}%y#T#o%yR2ZT!SQ!Q![%y!c!o%y!o!p2j!p!}%y#T#o%yR2oT!SQ!Q![%y!c!r%y!r!s3O!s!}%y#T#o%yR3VRiP!SQ!Q![%y!c!}%y#T#o%yR3eW!SQ!Q![%y!c!f%y!f!g3}!g!h4s!h!u%y!u!v5i!v!}%y#T#o%yR4ST!SQ!Q![%y!c!t%y!t!u4c!u!}%y#T#o%yR4jRfP!SQ!Q![%y!c!}%y#T#o%yR4xT!SQ!Q![%y!c!t%y!t!u5X!u!}%y#T#o%yR5`RvP!SQ!Q![%y!c!}%y#T#o%yR5nT!SQ!Q![%y!c!k%y!k!l5}!l!}%y#T#o%yR6ST!SQ!Q![%y!c!r%y!r!s6c!s!}%y#T#o%yR6jRyP!SQ!Q![%y!c!}%y#T#o%yR6xS!SQ!Q![%y!c!d7U!d!}%y#T#o%yR7ZT!SQ!Q![%y!c!z%y!z!{7j!{!}%y#T#o%yR7qR|P!SQ!Q![%y!c!}%y#T#o%yR8PT!SQ!Q![%y!c!q%y!q!r8`!r!}%y#T#o%yR8eT!SQ!Q![%y!c!q%y!q!r8t!r!}%y#T#o%yR8yT!SQ!Q![%y!c!r%y!r!s9Y!s!}%y#T#o%yR9aRtP!SQ!Q![%y!c!}%y#T#o%yR9oT!SQ!Q![%y!c!t%y!t!u:O!u!}%y#T#o%yR:VRlP!SQ!Q![%y!c!}%y#T#o%yR:eT!SQ!Q![%y!c!t%y!t!u:t!u!}%y#T#o%yR:yT!SQ!Q![%y!c!g%y!g!h;Y!h!}%y#T#o%yR;_T!SQ!Q![%y!c!u%y!u!v;n!v!}%y#T#o%yR;sT!SQ!Q![%y!c!g%y!g!h<S!h!}%y#T#o%yR<XT!SQ!Q![%y!c!p%y!p!q<h!q!}%y#T#o%yR<mT!SQ!Q![%y!c!v%y!v!w<|!w!}%y#T#o%yR=TRjP!SQ!Q![%y!c!}%y#T#o%yR=eR}P!SQ!Q![%y!c!}%y#T#o%yR=sY!SQ!Q![%y!c!g%y!g!h>c!h!u%y!u!v?m!v!wBX!w!xCy!x!|%y!|!}EV#T#o%yR>hT!SQ!Q![%y!c!q%y!q!r>w!r!}%y#T#o%yR>|T!SQ!Q![%y!c!v%y!v!w?]!w!}%y#T#o%yR?dRsP!SQ!Q![%y!c!}%y#T#o%yR?rV!SQ!Q![%y!c!q%y!q!r@X!r!x%y!x!y@}!y!}%y#T#o%yR@^T!SQ!Q![%y!c!r%y!r!s@m!s!}%y#T#o%yR@tRxP!SQ!Q![%y!c!}%y#T#o%yRAST!SQ!Q![%y!c!q%y!q!rAc!r!}%y#T#o%yRAhT!SQ!Q![%y!c!r%y!r!sAw!s!}%y#T#o%yRBORwP!SQ!Q![%y!c!}%y#T#o%yRB^T!SQ!Q![%y!c!t%y!t!uBm!u!}%y#T#o%yRBtTgP!SQ!Q![%y!c!r%y!r!sCT!s!}%y#T#o%yRCYT!SQ!Q![%y!c!e%y!e!fCi!f!}%y#T#o%yRCpRhP!SQ!Q![%y!c!}%y#T#o%yRDOT!SQ!Q![%y!c!d%y!d!eD_!e!}%y#T#o%yRDfTnP!SQ!Q![%y!c!x%y!x!yDu!y!}%y#T#o%yRD|RoP!SQ!Q![%y!c!}%y#T#o%yRE^RuP!SQ!Q![%y!c!}%y#T#o%y",
  tokenizers: [0, 1, 2],
  topRules: {"Program":[0,1]},
  tokenPrec: 0
})
